GistCache = {

  init: function() {
    GridGame.gist_cache = {
      "d9eb9a70ad0dc0fb1885be0fce032adc-stored": "// Named for Alan Faraday, elder brother of game creator.\nif (api.turn() < 30) {\n  api.awayY();\n} else if (api.turn() < 60) {\n  api.awayX();\n} else {\n  if (api.turn() % 54 < 27) {\n    api.towardsY();\n  } else {\n    api.towardsX(); \n  }\n}",
      "808c86eb544d9efaf94a30efc91bdfaf-stored": "if ((api.turn() % 2) == 0) {\n  api.towardsY();\n} else {\n  api.towardsX();\n}",
      "b9a0fe99060d9be1fc617bb7262f57be-stored": "if((api.turn() % 10) == 0) {\n  directions = ['towardsY', 'towardsX', 'awayY', 'awayX'];\n  dir = Math.floor(Math.random() * 4);\n  api[directions[dir]]();\n}",
      "6634a7f381bb679ee7c2d90d93588d66-stored": "if (typeof this.n === 'undefined') { \n  this.n = 0;\n} else {\n  this.n = (this.n + 1) % 4\n}\nif((api.turn() % 3) == 0) {\n  directions = ['towardsY', 'towardsX', 'awayY', 'awayX'];\n  api[directions[this.n]]();\n}",
      "b16df33acb0f0c7830d2ca2d656f80be-stored": "directions = ['towardsY', 'towardsX', 'awayY', 'awayX'];\ndir = Math.floor(Math.random() * 4);\napi[directions[dir]]();\n",
      "496367ff51c27dc62ebdc473cd14f333-stored": "const turn = api.turn();\nif (turn === 0) {\n\tthis.generator = (function* () {\n\t\tyield* [[0, 30], [1, 30]];\n\n\t\tfor (let i = 0; i < 10; ++i) {\n\t\t\tyield* [[2], [0, 2]];\n\t\t}\n\n\t\tfor (let i = 0; i < 4; ++i) {\n\t\t\tyield* [[3], [1, 2]];\n\t\t}\n\n\t\tyield* [[3], [2, 4], [1, 4]];\n\n\t\twhile (true) {\n\t\t\tfor (let i = 0; i < 30; ++i) {\n\t\t\t\tyield* [[3], [2, 2]];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 3; ++i) {\n\t\t\t\tyield [1, 42];\n\t\t\t\tyield [0, 51];\n\t\t\t}\n\t\t}\n\t})();\n\n\tthis.nextCall = 0;\n}\nif (turn === this.nextCall) {\n\tconst [dir, delay = 1] = this.generator.next().value;\n\t[api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n\tthis.nextCall += delay;\n}",
      "7512fcfcef33bff323d5cdaf1bb833ff-stored": "switch (\"NEWWNSNWEWWNNEWWNNNWWWNNNNNNSWWEWNNWNWENWWNWWEWNNNNENNWWNSESSSESESSWWSNSESSSWESWNSWWENNSSESSNSWESWWSWSESWSSWSWSSSNSWEENWEWEEWWSWSSWWSWNEWWEESEESEESEESEEEENEEESEEEEEEEEEEEEENEEEEEEEENEESEEEEENEEEEEEEEEEEEEENEENEEEEEEEEEEEEEEEEENNENEEEEEEEENEEEEEEEEEEEEEENNENNENNENNNNNENEEEEENEEEEEEEEWEEEEEEEEWEENEENEEESEEWEEEESEENWESEESEENEEEEEWEEESNNNENNENNEENENEENENNEENNNNEENNENEEENNNENNEENNENNEENESEEWEEEEEEEEEEEEEENNEENESSEWSENEEWSESEESSESSESSWNNNNENNNNENNNNNENNNNNNENNENNENENNNNNENNNNNNENENNNNNNENENNENNENNNENNENENNNNNENNNNNENNNNNNENENNNWNENNNNNNENNWNENNENNNWNENNENNNNENNNSWEENWNENENNENNNWNWNNENNEWNNNWENWNNNWNEENNWWNWNSSNSNSSEESSWNWESWSSWSESESSESESSSESEESSESNESSESEESESEEESSESEESSESSNSEESEEESSSSWNEESNNNESESSSESEEESEWSSSSSESESSNSNWENESNSESSSSSSSESSSSSWSSNNWSSNESSENSSESEESEWSEENSESWSSSNWESEWENSENNENNWNSSSEWNWWSSSNSESSWSNENSEEENNNNNNENSSNWEWWSSEWSSWNEEWEENSEWNESNESWNSSWWENWSENSWNNNWNNWESESEWWNNNWNWNNEWWSNWNNSWWNWWSENWNSNSWNWSNEWNNNNNNWWWWWSNWNWSSNENWSNNNSNWSNWWNNWWNNWNNSWWNNWWNENNWWSSWWNNNSWENNWWWWWWSWSWSNWNNSSNNNNNSWENWNWWEWNWNNNNWWWNSWWENNNNWNWNSWWWNNSSWNSSNWWNENNNWNWWNNWSESNNNNWWSNNWSWSWEWWNEWWWWWWSNWNNNWWWWNNEWWSEESNSWWWNNENNWWNSNWWNNWEWSWNWEWNWWSENNNWEWWSNWENWSWWWWNNSSENWSWNSNWSWWNNNNESWWNSWNNNWNWWNSWSNNENNSSWWWENSSENWNWWSSWSWWWEWSNEWWNEWWSWWSSSNWSNWEWEEWNNSWESSEESNNWWWWNSNSSNWSSWSNNSNNWSNWNWSWWSWNWEWEEWNNWNEWNSWWWWWSWNEEWWNNNSSNWWNNWWNWSNNWWNEEWESWNNNEWWWWSWWWNNSSWWNNSWSWEWSWWNSNWNESESWWEEWESSSNWEWENWSNNWNSESEEWWWWSWNNNSWNWWNWWWESSWNWNWNWEEWENEWNWSNNSNNWWWSSNNNWNNNSWNNNWSSWEWWENWNSNENEWESWNSWNEWENENSSEWSNNSNNSNNSSWSEWESSEWWSWWNSNNNNEWNWNESEENENNWSENEWNWWSNEENNSNWNNWNNNNWWWENNNEEWWENWWNNENWNNSWNNNEEWSSSSEESWWNESWNWNSWENEESENSENNNWESSNNSNWNSESESNEEENSSWENWEWNSENEENNSNWEEWNWNNEWNENNSSWWNSWSWSENENWENNWNEWWNNWSSSSESWNESSSNSWWNEESNWNNWESWENSWWNWESSWSNEWEENWESWWWSWSEWENNNNEEESSWWWNSWSNSWNSEESSSNEEWNNSSSWSSSWSNWSSSNSWNESWENNWWENNENWSWEWSEWSNWEWWESEWEEESSNEENNSWNWWWSWESSNSSSNNEWENENWNNWSSSWWESNWWSSEWSWEWNWNWSNSNEWEWEENEEWWESSENSSNNNNESNEWSNSSWENNSNNENEWNESNWNWESSWNNSWNNSWEWESSNWEWNWENEWEWESWSNNEWSWSWNEWEWSSWNWSWNSNSWESWNNWWNWNSENWNEWSWNNWNENWNENEEWSNSSSSEWSNNESNSSESESSSWWNWSESSNSSWWWWWSNWNEWESEWNEWESSNENEESNSEEWNSNNEWWWWESESSNEWWSSSNWSSWWNSSSSEWSWWWWSSNWSNWNWEEWSEWESWSENWNSWSSSSSWNWSNEWNWSSSWEWWEWNENESNNSWSSWNWNWNWNWSSSESSSWSWSWSSWSWESWSEESWEENSNNSSNNSSSWWEWSNEWWNNEENNNWSSEWWSESSNWNSEWNWNNNWNESSSSNEEWWENNEESESSNEEWEWEWSWSEWWNEWENWNEWNWENSNNEWSENESSSEESSWENNWESESSSWNNNWWNSNWEWWWEWSWSWESSENWWSENSEWSEWNSWNEENWNWWNSEEWWSWWWWWWNESEESSWEWENNSWWSNWWNSSWWNWNWNWNEWWWSWNNEESWSWWWESSEWNWSWEEWWNSENSWSWNSWWSSEWNEWWWNSNEENEWNNWNWWNSNNSWNWSNWSNNWWEWNWWWNESESNSEWWNENNSEWWWNWWWENWWNSSSEWNWEEEENWSSESEWESWWNSSWEEEEENSNWSWSEWESESSNWNWSENSSSENWWWNWWNENSSENWNWWWEWEENEENEWEWNSENENSSSWNWWSWWSNSESENESENWSSWWEENWWWWWEWSSSWSWESNSEWSSNWSWWWSSEWWEWWWSSSNEWWWWEENNSEEWWESWSSNESEENNSNENSWNNNNEENEWWWEWSEEWWEENWNSSSSWWNNENWNEWSSNENNNENSWSESSWSNENNWSWWWSESESENSNSSENWWSEENWWNSEWSEWNNWSENSNWEWWWNSSESESWSNSSEESWNEEENEEWSNNSWSESENNNWESWSWNNWESEENWWWENWWEWSSWSESWEWENSNEEEESSNWSSWSSNEENNEEEESSWWNWENSWESEWSESNE\"[api.turn()]) {\n    case 'W':\n        api.awayX();\n        break;\n    case 'N':\n        api.awayY();\n        break;\n    case 'E':\n        api.towardsX();\n        break;\n    case 'S':\n        api.towardsY();\n        break;\n}",
      "966e8f3ad189b9535c2e1fad3ffc065a-stored": "const turn = api.turn();\nif (turn === 0) {\n    this.generator = (function*() {\n        yield* [[3, 8], [2, 16], [3], [0], [1], [0, 27]];\n        while (true) {\n            yield* [[3, 36], [2, 36], [1, 36], [0, 36]];\n            for (let i = 0; i < 20; ++i) {\n                yield* [[2, 2], [1]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[2, 2], [3]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[0, 2], [1]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[0, 2], [3]];\n            }\n            for (let i = 0; i < 10; ++i) {\n                yield* [[1], [3, 2]];\n                yield* [[2], [0, 2]];\n                yield* [[3], [1, 2]];\n                yield* [[0], [2, 2]];\n            }\n        }\n    })();\n\n    this.nextCall = 0;\n}\nif (turn === this.nextCall) {\n    const [dir, delay = 1] = this.generator.next().value;\n    [api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n    this.nextCall += delay;\n}",
      "3dcc9463f47626a217a5a51762f02fe6-stored": "const turn = api.turn();\nif (turn === 0) {\n    this.generator = (function*() {\n        yield* [[2, 3], [3, 3], [2, 3], [3, 2], [2, 10], [3, 3], [2, 3], [3, 3], [2, 1], [1, 1], [2, 3], [1, 1], [3, 1], [1, 1], [3, 4], [2, 9], [3, 3], [2, 3], [3, 2], [2, 4], [3, 1]];\n        yield* [0, 3, 2].map(i => [i, 36]);\n\n        while (true) {\n            for(let i = 0; i < 4; i++)\n            {\n                yield* [[2, 25], [3, 8]];\n            }\n            for(let i = 0; i < 4; i++)\n            {\n                yield* [[0, 25], [1, 8]];\n            }\n            yield* [[1, 50]];\n        }\n    })();\n\n    this.nextCall = 0;\n}\nif (turn === this.nextCall) {\n    const [dir, delay] = this.generator.next().value;\n    [api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n    this.nextCall += delay;\n}",
      "7d0a88c1533fc89b2ee26484bbcafc59-stored": "if (api.turn() < 29) {\n   api.awayY();\n} else if (api.turn() % 3 == 2) {\n   api.towardsY();\n} else {\n   api.towardsX();\n}",
      "3f69bdf2be37886ff396d0c485007e80-stored": "//Sweeping Endgame v2\nthis.t = api.turn();\n\n//initial city setup\nif (this.t < 29) {\n   api.awayY();\n} else if (this.t < 59) {\n   api.awayX();\n\n//mid-game loop, now attempts to put cities in the two off-corners\n} else if (this.t < 400) {\n  if (this.t % 200 < 14) {\n     api.towardsY();\n  } else if (this.t % 200 > 13 && this.t % 200 < 17) {\n     api.awayX();\n  } else if (this.t % 200 > 100 && this.t % 200 < 122) {\n     api.towardsX();\n  } else if (this.t % 200 > 121 && this.t % 200 < 126) {\n     api.awayY();\n  } else if ((this.t % 8) % 3 == 1) {\n     api.towardsY();\n  } else {\n     api.towardsX(); \n  }\n\n//endgame, now sequential, not random\n} else {\n   if (this.t % 200 < 40) {\n      api.awayY()\n   } else if (this.t % 200 < 50) {\n      if (this.t % 2 == 0) {\n        api.towardsY();\n      } else {\n        api.awayX();\n      }\n   } else if (this.t % 200 < 90) {\n     api.towardsX()\n   } else if (this.t % 200 < 100) {\n      if (this.t % 2 == 0) {\n        api.awayY();\n      } else {\n        api.awayX();\n      }\n   } else if (this.t % 200 < 140) {\n     api.towardsY()\n   } else if (this.t % 200 < 150) {\n      if (this.t % 2 == 0) {\n        api.awayY();\n      } else {\n        api.towardsX();\n      }\n   } else if (this.t % 200 < 190) {\n     api.awayX()\n   } else {\n      if (this.t % 2 == 0) {\n        api.towardsY();\n      } else {\n        api.towardsX();\n      }\n   }\n}\n",
      "a0a4a9f3c8b8863392f109fdfd52af00-stored": "if (api.turn() < 29) {\n   api.awayY();\n} else if (api.turn() < 59) {\n   api.awayX();\n} else if (api.turn() % 3 == 0) {\n   api.towardsY();\n} else {\n   api.towardsX();\n}",
      "2d632fb11ea1a7b1b73788d396a6a45d-stored": "const turn = api.turn();\nif (turn === 0) {\n\tthis.generator = (function*() {\n\t\tyield* [[0, 24], [1], [0], [3], [0, 3]];\n\n\t\tfor(let i = 0; i < 40; i++) {\n\t\t\tyield* [[1], [2, 2]];\n\t\t}\n\n\t\twhile (true) {\n\t\t\tfor(let i = 0; i < 40; i++) {\n\t\t\t\tyield* [[3, 2], [2]];\n\t\t\t}\n\t\t\tfor(let i = 0; i < 40; i++) {\n\t\t\t\tyield* [[0, 2], [1]];\n\t\t\t}\n\t\t\tfor(let i = 0; i < 40; i++) {\n\t\t\t\tyield* [[3], [0, 2]];\n\t\t\t}\n\t\t\tfor(let i = 0; i < 40; i++) {\n\t\t\t\tyield* [[0, 2], [3]];\n\t\t\t}\n\t\t\tfor(let i = 0; i < 40; i++) {\n\t\t\t\tyield* [[1], [0, 2]];\n\t\t\t}\n\t\t}\n\t})();\n\t\n\tthis.nextCall = 0;\n}\nif (turn === this.nextCall) {\n\tconst [dir, delay = 1] = this.generator.next().value;\n\t[api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n\tthis.nextCall += delay;\n}",
      "49d7afbe8bb6d542acc871ac40d12e83-stored": "const turn = api.turn();\nconst opening = \"EEESSSEEESSEEEEEEEEEESSSEEESSSENEEENSNSSSSEEEEEEEEESSSEEESSEEEESE\";\nif(turn < opening.length) {\n\tswitch (opening[turn]) {\n\t\tcase 'W':\n\t\t\tapi.awayX();\n\t\t\tbreak;\n\t\tcase 'N':\n\t\t\tapi.awayY();\n\t\t\tbreak;\n\t\tcase 'E':\n\t\t\tapi.towardsX();\n\t\t\tbreak;\n\t\tcase 'S':\n\t\t\tapi.towardsY();\n\t\t\tbreak;\n\t}\n} else if(turn >= 120) {\n\tif(api.spawning_turn()) api.towardsY();\n\telse api.towardsX();\n}",
      "f904da9534cf91ff2d5d399f59757ebc-stored": "const turn = api.turn();\nconst opening = \"EEESSSEEESSEEEEEEEEEESSSEEESSSENEEENSNSSSSEEEEEEEEESSSEEESSEEEESE\";\nif(turn < opening.length*5) {\n    switch (opening[turn%opening.length]) {\n        case 'W':\n            api.awayX();\n            break;\n        case 'N':\n            api.awayY();\n            break;\n        case 'E':\n            api.towardsX();\n            break;\n        case 'S':\n            api.towardsY();\n            break;\n    }\n}\nif (turn === opening.length*5) {\n    this.generator = (function* () {\n        yield* [[0, 30], [1, 30], [2, 30]];\n\n        for (let i = 0; i < 20; ++i) {\n            yield* [[3], [2, 2]];\n        }\n\n        while (true) {\n            for (let i = 0; i < 20; ++i) {\n                yield* [[3, 2], [2]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[3, 2], [0]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[2, 2], [1]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[2, 2], [3]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[1, 2], [0]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[1, 2], [2]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[0, 2], [3]];\n            }\n            for (let i = 0; i < 20; ++i) {\n                yield* [[0, 2], [1]];\n            }\n        }\n    })();\n\n    this.nextCall = turn;\n}\nif (turn === this.nextCall) {\n    const [dir, delay = 1] = this.generator.next().value;\n    [api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n    this.nextCall += delay;\n}",
      "9c65942bf924d9bb09e99d22daf0d8d0-stored": "const turn = api.turn();\nconst opening =\n\t\"SSSEEESSSEEEEEEEEEESSEEE\"+\n\t\"SSSEEESSSEEEEEEESSEEEEEE\"+\n\t\"SSSEEESSSEEEESSEEEEEEEEE\"+\n\t\"SSSEEESSSESSEEEEEEEEEEEE\";\nconst pattern = \"NWSSSSEEESSSWNEESSEEEEEEEEEEEE\";\nif(turn < opening.length) {\n\tswitch (opening[turn]) {\n\t\tcase 'W':\n\t\t\tapi.awayX();\n\t\t\tbreak;\n\t\tcase 'N':\n\t\t\tapi.awayY();\n\t\t\tbreak;\n\t\tcase 'E':\n\t\t\tapi.towardsX();\n\t\t\tbreak;\n\t\tcase 'S':\n\t\t\tapi.towardsY();\n\t\t\tbreak;\n\t}\n} else {\n\tswitch (pattern[(turn-opening.length)%pattern.length]) {\n\t\tcase 'W':\n\t\t\tapi.awayX();\n\t\t\tbreak;\n\t\tcase 'N':\n\t\t\tapi.awayY();\n\t\t\tbreak;\n\t\tcase 'E':\n\t\t\tapi.towardsX();\n\t\t\tbreak;\n\t\tcase 'S':\n\t\t\tapi.towardsY();\n\t\t\tbreak;\n\t}\n}",
      "54e4de5b03423cc19a1ec0e22f32a981-stored": "const turn = api.turn();\nif (turn === 0) {\n\tthis.generator = (function* () {\n\t\tyield* [[0, 24], [1], [0], [3], [0, 3]];\n\n\t\tfor (let i = 0; i < 9; ++i) {\n\t\t\tyield* [[1], [2], [0]];\n\t\t}\n\t\tyield [1, 3];\n\n\t\tfor (let i = 0; i < 10; ++i) {\n\t\t\tyield* [[3], [1, 2]];\n\t\t}\n\n\t\tfor (let i = 0; i < 4; ++i) {\n\t\t\tyield* [[2], [0, 2]];\n\t\t}\n\n\t\tyield* [[2], [3, 4], [0, 4]];\n\n\t\tfor (let i = 0; i < 4; ++i) {\n\t\t\tyield* [[2], [0, 2]];\n\t\t}\n\n\t\tyield* [[2], [3, 2], [0], [3, 2], [0], [3, 2], [0, 3]];\n\n\t\twhile (true) {\n\t\t\tfor (let i = 0; i < 60; ++i) {\n\t\t\t\tyield* [[2, 2], [1]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 40; ++i) {\n\t\t\t\tyield* [[3, 2], [2]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 60; ++i) {\n\t\t\t\tyield* [[0, 2], [3]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 40; ++i) {\n\t\t\t\tyield* [[1, 2], [0]];\n\t\t\t}\n\t\t}\n\t})();\n\n\tthis.nextCall = 0;\n}\nif (turn === this.nextCall) {\n\tconst [dir, delay = 1] = this.generator.next().value;\n\t[api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n\tthis.nextCall += delay;\n}\n",
      "cb68f09d808b5de34daf5c45b46f2bea-stored": "const turn = api.turn();\nif (turn === 0) {\n\tthis.generator = (function* () {\n\t\tyield* [[3, 8], [2, 16], [3], [0], [1], [0, 27]];\n\n\t\tlet laps = 1;\n\t\twhile(true) {\n\t\t\tfor (let i = 0; i < laps*10; ++i) {\n\t\t\t\tyield* [[3, 2], [0]];\n\t\t\t}\n\t\t\tlaps++;\n\t\t\tfor (let i = 0; i < laps*10; ++i) {\n\t\t\t\tyield* [[2, 2], [3]];\n\t\t\t}\n\t\t\tlaps++;\n\t\t\tfor (let i = 0; i < laps*10; ++i) {\n\t\t\t\tyield* [[1, 2], [2]];\n\t\t\t}\n\t\t\tlaps++;\n\t\t\tfor (let i = 0; i < laps*10; ++i) {\n\t\t\t\tyield* [[0, 2], [1]];\n\t\t\t}\n\t\t\tlaps++;\n\t\t}\n\t})();\n\n\tthis.nextCall = 0;\n}\nif (turn === this.nextCall) {\n\tconst [dir, delay = 1] = this.generator.next().value;\n\t[api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n\tthis.nextCall += delay;\n}",
      "294c357b051e6e165d18657748d02cfe-stored": "const turn = api.turn();\nif (turn === 0) {\n\tthis.generator = (function* () {\n\t\tyield* [[1, 24], [0], [1], [2], [1, 3]];\n\n\t\tfor (let i = 0; i < 9; ++i) {\n\t\t\tyield* [[0], [3], [1]];\n\t\t}\n\t\tyield [0, 3];\n\n\t\tfor (let i = 0; i < 10; ++i) {\n\t\t\tyield* [[2], [0, 2]];\n\t\t}\n\n\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\tyield* [[3], [2, 2]];\n\t\t}\n\n\t\twhile (true) {\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[3, 2], [2]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[3, 2], [0]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[2, 2], [1]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[2, 2], [3]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[1, 2], [0]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[1, 2], [2]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[0, 2], [3]];\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; ++i) {\n\t\t\t\tyield* [[0, 2], [1]];\n\t\t\t}\n\t\t}\n\t})();\n\n\tthis.nextCall = 0;\n}\nif (turn === this.nextCall) {\n\tconst [dir, delay = 1] = this.generator.next().value;\n\t[api.awayX, api.awayY, api.towardsX, api.towardsY][dir].bind(api)();\n\tthis.nextCall += delay;\n}",
      "46b9d27b1994c35a8ef214c1b2067609-stored": "//Twin Cities\nconst turn = api.turn();\n\nif (turn < 31) {\n    switch(turn % 6) {\n        case 0:\n            api.awayX();\n            break;\n        case 1:\n            api.awayX();\n            break;\n        case 2:\n            api.awayY();\n            break;\n        case 3:\n            api.awayY();\n            break;\n        case 4:\n            api.awayY();\n            break;\n        case 5:\n            api.awayX();\n            break;\n    }\n} else if (turn < 80) {\n    switch(turn % 3) {\n        case 0:\n            api.towardsY();\n            break;\n        case 1:\n            api.towardsX();\n            break;\n        case 2:\n            api.towardsX();\n            break;\n    }\n} else if (turn < 127) {\n    api.towardsX();\n} else if (turn < 246) {\n    api.towardsY();\n} else if (turn < 350) {\n    api.awayX();\n} else if (turn < 400) {\n    api.towardsY();\n} else if (turn < 500) {\n    api.towardsX();\n} else {\n    const late = turn % 200;\n    if (late < 50) {\n        api.awayY();\n    } else if (late < 100) {\n        api.awayX();\n    } else if (late < 150) {\n        api.towardsY();\n    } else if (late < 200) {\n        api.towardsX();\n    }\n}"
    }
  }

};
